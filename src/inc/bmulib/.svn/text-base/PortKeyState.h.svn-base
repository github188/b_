/****************************************************************
** 文 件 名：PortKeyState.h
** 简    叙: 端口状态接口头文件
** 作　  者：yuanf

** 修 改 人：yuanf
** 日　  期：2012.10.25
** 修改说明：创建

** 版    本：1.0
****************************************************************/

#ifndef	INC_PORTKEYSTATE_H
#define	INC_PORTKEYSTATE_H
#include "bmuType.h"
#ifdef	__cplusplus
extern  "C"{
#endif	/* __cplusplus */

#define	MAX_LINE_CODE_LEN	16

/********************************************/
/*            端口状态数据结构              */
/********************************************/
struct PortState
{
	/*线路号信息*/
	unsigned char lineCode[MAX_LINE_CODE_LEN];			/*线路号*/
	unsigned char lineLen;								/*线路号长度*/

	/*设置的信号类型*/
	unsigned char ucRecvSignalTypeCmd;					/*收到设置信号类型命令*/
	unsigned char ucSetSignalType;						/*设置的信号类型*/
	unsigned int  uiSetWaveSeq;							/*设置的波长编号*/

	/*上报的信号类型*/
	unsigned char	ucFlag;								/*当前信号类型是否有效1：有效 0：无效*/
	unsigned char 	ucWdmType;							/*波分类型*/
	unsigned char 	ucSignalType;						/*信号类型*/
	unsigned char 	ucWaveIntr;							/*波长间隔*/
	unsigned int 	uiWaveSeq;							/*波长编号*/	

	/*上报的端口状态*/
	unsigned char	ucState;							/*当前端口状态0：正常 1：故障*/
	unsigned char	ucLastState;						/*前一次端口状态*/
};


extern int PortStateInit(void);

/*****************************************************
函数名：RegPortState()

功 能：	向公共库输入一个端口状态数据结构

输 入：	pstuState	要注册的端口状态数据结构
		
输 出：	OK:		成功记录一条线路状态信息
		ERROR:	输入的参数非法
		原因：	1 pstuState为空指针。
				2 线路号为usLineCode的端口没有注册。
				3 这条线路的端口状态数据已经注册过。

描 述：	通过这个函数通知公共库增加了一个端口状态结构。
		这个过程中不对线路进行排序，注册的顺序就是上报
		端口状态数据在数据帧中的顺序。

		使用EMU-BCT协议的库没有这个函数。

作 者：	yuanf
			
修 改：	

时 间：		
*****************************************************/ 
extern STATUS RegPortState(struct PortState *pstuState	);

/*****************************************************
函数名：DeletePortState()

功 能：	删除注册的端口状态

输 入：	pstuState	要删除的端口状态数据结构
		
输 出：	OK:		成功记录一条线路状态信息
		ERROR:	输入的参数非法
		原因：	1 pstuState为空指针。
				2 线路号为usLineCode的端口没有注册。
				3 这条线路的端口状态数据已经注册过。

描 述：	通过这个函数通知公共库增加了一个端口状态结构。
		这个过程中不对线路进行排序，注册的顺序就是上报
		端口状态数据在数据帧中的顺序。

		使用EMU-BCT协议的库没有这个函数。

作 者：	yuanf
			
修 改：	

时 间：		
*****************************************************/ 
extern int DeletePortState(struct PortState *pstuState);

/*****************************************************
函数名：SetPortStateFilterTime()

功 能：	设置端口状态过滤时间

输 入：	ms_50	端口状态从故障转为正常持续的时间，单位为50毫秒
		
输 出：	无

描 述：	这个函数设置端口状态从故障转为正常持续的时间；当端口状态从故障变为正常，
		并且持续时间超过设置的时间后，单盘将向ACU上报端口状态为正常，如果端口正
		常状态持续时间小于设置的时间，端口的状态仍为故障；默认的端口正常需要持续
		的时间为300ms。
		
		使用EMU-BCT协议的库没有这个函数。

作 者：	yuanf
			
修 改： 创建

时 间：	2008.07.16				
*****************************************************/
extern void SetPortStateFilterTime(int ms_50);

/*****************************************************
函数名：ReportPortState()

功 能：	向控制平面上报线路状态

输 入：	无
		
输 出：	n:		成功发送到发送队列的数据个数
		ERROR:	没有发送数据到发送队列
		原因：	1 没有注册的线路。
				2 没有申请到内存空间。
				3 没有获得ACU的IP地址。
				4 本盘没有注册过端口状态数据。

描 述：	这个函数向控制平面上报端口状态，端口状态数据来源于用户
		层的数据结构PortState。只有端口状态数据有效时才把端口状
		态发送到控制平面。
		使用EMU-BCT协议的库没有这个函数。

作 者：	yuanf
			
修 改：

时 间：			
*****************************************************/
extern STATUS ReportPortState(void);

/*****************************************************
函数名：ReportPortSignalType()

功 能：	向控制平面上报端口信号类型

输 入：	无
		
输 出：	n:		成功发送到发送队列的数据个数
		ERROR:	没有发送数据到发送队列
		原因：	1 没有注册的线路。
				2 没有申请到内存空间。
				3 没有获得ACU的IP地址。
				4 本盘没有注册过端口状态数据。

描 述：	这个函数向控制平面上报端口状态，端口状态数据来源于用户
		层的数据结构PortState。只有端口状态数据有效时才把端口状
		态发送到控制平面。
		使用EMU-BCT协议的库没有这个函数。

端口线路号个数(4字节)
线路号1	信号状态(1字节)	波分类型	波长间隔	波长(2字节)
……
线路号N	信号状态(1字节)	波分类型	波长间隔	波长(2字节)


作 者：	yuanf
			
修 改：

时 间：			
*****************************************************/
extern STATUS ReportPortSignalType(void);

/*****************************************************
函数名：PrintPortState() 

功 能：	打印端口状态和信号类型信息

输 入：	无
		
输 出：	无

描 述：	调试时可通过这个函数查看单盘端口状态链表的信息。

作 者：	yuanf
	
修 改：创建

时 间：2012.10.25
*****************************************************/
extern void PrintPortState(void);


#ifdef	__cplusplus
}
#endif	/* __cplusplus */

#endif	/*INC_PORTKEYSTATE_H*/

/***************************************************************/
/***********************End PortKeyState.h**********************/
/***************************************************************/

